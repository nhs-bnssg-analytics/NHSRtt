% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steady_state.R
\name{optimise_steady_state}
\alias{optimise_steady_state}
\title{Identify the steady-state solution with the closest treatment capacity or renege rate
  to a given target}
\usage{
optimise_steady_state(
  referrals,
  target,
  renege_params,
  target_time = 4 + (68/487),
  percentile = 0.92,
  method = c("lp", "bs"),
  s_given = NULL,
  bs_tolerance = target * 0.05,
  bs_max_iterations = 10
)
}
\arguments{
\item{referrals}{numeric of length 1; value representing the steady-state number
of referrals.}

\item{target}{Numeric. The desired renege rate to be achieved. The value must be between
0 and 1 and represents the proportion of all departures that are reneges.}

\item{renege_params}{numeric; proportion \ifelse{html}{\out{(0 &le; r<sub>m</sub> &leq; 1)}}{\eqn{(0 \leq r_m \leq 1)}}
of waiting patients reneging in the m-th month of waiting, where \ifelse{html}{\out{r<sub>2</sub>}}{\eqn{r_2}} = 0.1
refers to 10\% of those in the second month of waiting reneging.}

\item{target_time}{numeric of length 1; the target waiting time,
in months, to achieve the specified percentile.}

\item{percentile}{Numeric value between 0 and 1 indicating the desired percentile (default is 0.92).}

\item{method}{character length 1; "lp" for linear programming, or "bs" for
binary search}

\item{s_given}{numeric vector, length equal to \code{length(renege_params)}; values must be between
0 and 1 and must represent the proportion of total treatments that are applied to each compartment.
This is used as a constraint in the optimisation and the output should follow the same profile}

\item{bs_tolerance}{Numeric. Acceptable deviation from `target` for convergence.
Defaults to 10\% of `target`.}

\item{bs_max_iterations}{Integer. Maximum number of iterations for the binary search.
Defaults to 10.}
}
\value{
A list containing:
  \item{p1}{The value of \code{p1} found to achieve the target waiting time.}
  \item{time_p}{The interpolated waiting time at the specified percentile.}
  \item{mu}{The total number of treatments required when the solution is found.}
  \item{wlsize}{The total size of the waiting list when the solution is found.}
  \item{waiting_list}{The data frame with historical data formatted and waiting
    list sizes calculated.}
  \item{niterations}{The number of iterations performed in the binary search.}
  \item{status}{Converged indicates a solution was found, and Not converged
    indicates no solution was found.}
  \item{method}{The method the solution was identified.}
}
\description{
This function performs either a linear programming or binary search method
  to identify a solution that satisies multiple constraints (1, arrivals = departures,
  2, percentile on waiting list waiting within given time is equal to given value, 3,
  renege rate is equal to given value)
}
\examples{
\dontrun{
optimise_steady_state(
  referrals = 100,
  target = 0.1,
  renege_params = runif(24),
  method = "lp",
  s_given = c(0.4, 0.2, 0.1, rep(0.05, 6), rep(0, 15))
)

optimise_steady_state(
  referrals = 100,
  bs_target = 0.2,
  renege_params = runif(24),
  method = "bs"
)
}

}
